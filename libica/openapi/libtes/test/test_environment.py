# coding: utf-8

"""
    Task Execution Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import libica.openapi.libtes
from libica.openapi.libtes.models.environment import Environment  # noqa: E501
from libica.openapi.libtes.rest import ApiException

class TestEnvironment(unittest.TestCase):
    """Environment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Environment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = libica.openapi.libtes.models.environment.Environment()  # noqa: E501
        if include_optional :
            return Environment(
                variables = {
                    'key' : '0'
                    }, 
                resources = libica.openapi.libtes.models.resources.Resources(
                    type = '0', 
                    size = '0', 
                    cpu_cores = 1.337, 
                    memory_gb = 1.337, 
                    hardware = [
                        '0'
                        ], 
                    tier = '0', ), 
                input_stream_settings = libica.openapi.libtes.models.input_stream_settings.InputStreamSettings(
                    access_pattern = 'sequential', 
                    cache_size_gb = 5E+1, 
                    block_size_mb = 0, 
                    prefetch_blocks = 0, )
            )
        else :
            return Environment(
        )

    def testEnvironment(self):
        """Test Environment"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
