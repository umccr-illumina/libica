# coding: utf-8

"""
    Task Execution Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import libica.openapi.libtes
from libica.openapi.libtes.models.task_run_summary_paged_items import TaskRunSummaryPagedItems  # noqa: E501
from libica.openapi.libtes.rest import ApiException

class TestTaskRunSummaryPagedItems(unittest.TestCase):
    """TaskRunSummaryPagedItems unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TaskRunSummaryPagedItems
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = libica.openapi.libtes.models.task_run_summary_paged_items.TaskRunSummaryPagedItems()  # noqa: E501
        if include_optional :
            return TaskRunSummaryPagedItems(
                items = [
                    libica.openapi.libtes.models.task_run_summary.TaskRunSummary(
                        id = '0', 
                        href = '0', 
                        urn = '0', 
                        name = '0', 
                        description = '0', 
                        status = 'Pending', 
                        status_details = '0', 
                        task_version_summary = libica.openapi.libtes.models.task_version_summary.TaskVersionSummary(
                            id = '0', 
                            href = '0', 
                            urn = '0', 
                            version = '0', 
                            description = '0', 
                            acl = [
                                '0'
                                ], 
                            tenant_id = '0', 
                            sub_tenant_id = '0', 
                            created_by = '0', 
                            time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            modified_by = '0', 
                            time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        acl = [
                            '0'
                            ], 
                        tenant_id = '0', 
                        sub_tenant_id = '0', 
                        created_by = '0', 
                        time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified_by = '0', 
                        time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ], 
                item_count = 56, 
                first_page_token = '0', 
                next_page_token = '0', 
                prev_page_token = '0', 
                last_page_token = '0', 
                total_item_count = 56, 
                total_page_count = 56
            )
        else :
            return TaskRunSummaryPagedItems(
        )

    def testTaskRunSummaryPagedItems(self):
        """Test TaskRunSummaryPagedItems"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
