# coding: utf-8

"""
    Event Notification Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import libica.openapi.libens
from libica.openapi.libens.models.create_subscription_request import CreateSubscriptionRequest  # noqa: E501
from libica.openapi.libens.rest import ApiException

class TestCreateSubscriptionRequest(unittest.TestCase):
    """CreateSubscriptionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateSubscriptionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = libica.openapi.libens.models.create_subscription_request.CreateSubscriptionRequest()  # noqa: E501
        if include_optional :
            return CreateSubscriptionRequest(
                type = 'a', 
                actions = [
                    '0'
                    ], 
                name = 'a', 
                description = '0', 
                filter_expression = '0', 
                delivery_target = libica.openapi.libens.models.delivery_target.DeliveryTarget(
                    aws_sns_topic = libica.openapi.libens.models.delivery_target_aws_sns_topic.DeliveryTargetAwsSnsTopic(
                        topic_arn = '0', ), 
                    aws_sqs_queue = libica.openapi.libens.models.delivery_target_aws_sqs_queue.DeliveryTargetAwsSqsQueue(
                        queue_url = '0', ), 
                    workflow_run_launch = libica.openapi.libens.models.delivery_target_workflow_run_launch.DeliveryTargetWorkflowRunLaunch(
                        id = '0', 
                        version = '0', 
                        name = '0', 
                        # input = libica.openapi.libens.models.input.input(),
                    ), )
            )
        else :
            return CreateSubscriptionRequest(
                type = 'a',
                name = 'a',
                delivery_target = libica.openapi.libens.models.delivery_target.DeliveryTarget(
                    aws_sns_topic = libica.openapi.libens.models.delivery_target_aws_sns_topic.DeliveryTargetAwsSnsTopic(
                        topic_arn = '0', ), 
                    aws_sqs_queue = libica.openapi.libens.models.delivery_target_aws_sqs_queue.DeliveryTargetAwsSqsQueue(
                        queue_url = '0', ), 
                    workflow_run_launch = libica.openapi.libens.models.delivery_target_workflow_run_launch.DeliveryTargetWorkflowRunLaunch(
                        id = '0', 
                        version = '0', 
                        name = '0', 
                        # input = libica.openapi.libens.models.input.input(),
                    ), ),
        )

    def testCreateSubscriptionRequest(self):
        """Test CreateSubscriptionRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
