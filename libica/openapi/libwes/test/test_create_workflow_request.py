# coding: utf-8

"""
    Workflow Execution Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import libica.openapi.libwes
from libica.openapi.libwes.models.create_workflow_request import CreateWorkflowRequest  # noqa: E501
from libica.openapi.libwes.rest import ApiException

class TestCreateWorkflowRequest(unittest.TestCase):
    """CreateWorkflowRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateWorkflowRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = libica.openapi.libwes.models.create_workflow_request.CreateWorkflowRequest()  # noqa: E501
        if include_optional :
            return CreateWorkflowRequest(
                name = '0', 
                description = '0', 
                organization = '0', 
                workflow_version = libica.openapi.libwes.models.create_workflow_version_request.CreateWorkflowVersionRequest(
                    version = '0', 
                    description = '0', 
                    language = libica.openapi.libwes.models.workflow_language.WorkflowLanguage(
                        name = '0', 
                        version = '0', ), 
                    # definition = libica.openapi.libwes.models.definition.definition(),
                    acl = [
                        '0'
                        ], 
                    status = 'draft', ), 
                tool_class = 'workflow', 
                acl = [
                    '0'
                    ], 
                categories = [
                    '0'
                    ]
            )
        else :
            return CreateWorkflowRequest(
                name = '0',
        )

    def testCreateWorkflowRequest(self):
        """Test CreateWorkflowRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
